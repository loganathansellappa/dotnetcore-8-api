services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm64/v8
    container_name: restaurants-api-app  
    ports:
      - "8080:5298"
    environment:
      - ASPNETCORE_URLS=http://+:5298
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RestaurantsDb=Server=db;Database=Restaurants;User Id=sa;Password=dockerStrongPwd123;TrustServerCertificate=true;Encrypt=false;
      - BLOB_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=restaurants;AccountKey=7YlW9i7Qs0uQhZd6kKjgNw7MwJl6QJ7qYVx3kMl8d5R2xw9aM6HvFZg==;EndpointSuffix=core.windows.net
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
  db:
    container_name: restaurants-api-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./docker-db:/var/opt/mssql/scripts
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "dockerStrongPwd123"
    ports:
      - "1433:1433"
    command: >
      /bin/bash -c "
        /opt/mssql/bin/sqlservr --accept-eula &  # Start SQL Server
        sleep 20 &&  # Wait for SQL Server to start
        # Run the initialization script and bypass SSL verification
        /opt/mssql-tools18/bin/sqlcmd -S db -U sa -P dockerStrongPwd123 -i /var/opt/mssql/scripts/db-init.sql  -C &&
        wait  # Prevent the container from exiting
      "
